Task 3 Plan

---------------------------------------------------------------------
Task3.py

displayHand()
    use for loop to print each card in hand

sortbytitle()

    call thinking
    use selection sort to sort cards by title
	1. Set min to location 0
	2. look for the smallest element in the list
	3. replace the value at location min with a different value
	4. continue till list is sorted

sortByGang()

    call thinking
    use insertion sort to sort cards by gang
	1. select first unsorted element
	2. swap other elements to the right to create the corect position and shift the unsorted element
	3. advance the marker to the right one element
	4. repeat until sorted

searchCard()

    display numbered list of titles
    prompt user to choose
    display numbered list of gangs
    prompt user to choose
    sort cards by gang
    use binary search to find card
	1. If the key is less than the list’s middle element continue to search for the key only in the first half of the list.
	2. If the key is equal to the list’s middle element the search ends with a match.
	3. If the key is greater than the list’s middle element continue to search for the key only in the second half of the list.
    if card is in hand inform user and break
    if card isn't in hand inform user

------------------------------------------------------
class Card

Public Methods
getTitle()
    return the title of card
getGang()
    return the gang of card
getID()

dunder methods
__repr__()
    if getID method is called in a seperate file rep title and gang


------------------------------------------------------------------------
class Deck

shuffle()
    initiate a list of length gangs list * length titles list
    append cards to make deck, use card class to append card objects.
draw()
    removes a card from the deck and returns the card object to hand




TESTING

